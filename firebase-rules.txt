// Firestore rules to secure the application
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User profiles are readable by authenticated users if public profile is true,
    // and always writeable by the user who owns the document
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || resource.data.isPublicProfile == true);
      allow write: if request.auth != null && request.auth.uid == userId;
      
      // Allow minimal reads for connections features
      match /connections/{connectionId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Messages can be read and written only by the participants
    match /messages/{messageId} {
      allow read: if request.auth != null && 
                    request.auth.uid in resource.data.participants;
      allow create: if request.auth != null && 
                    request.auth.uid in request.resource.data.participants && 
                    request.auth.uid == request.resource.data.senderId;
      allow update: if request.auth != null && 
                    request.auth.uid in resource.data.participants && 
                    (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['read']));
    }
    
    // Trading accounts can only be accessed by the owner
    match /users/{userId}/accounts/{accountId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Trading plans can only be accessed by the owner
    match /users/{userId}/tradingPlans/{planId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Trades can only be accessed by the user who owns them
    match /users/{userId}/accounts/{accountId}/trades/{tradeId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Journal entries can only be accessed by the user who wrote them
    match /users/{userId}/journalEntries/{entryId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
} 